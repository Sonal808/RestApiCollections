{
	"info": {
		"_postman_id": "feeb8a3a-2c8d-4f28-83dd-aa2c27c8edf7",
		"name": "DataDrivenAPIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12747991",
		"_collection_link": "https://www.postman.com/spteam-0238/workspace/api-mastery/collection/12747991-feeb8a3a-2c8d-4f28-83dd-aa2c27c8edf7?action=share&source=collection_link&creator=12747991"
	},
	"item": [
		{
			"name": "CreateUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Check user Response Data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
							"    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
							"\r",
							"    //Fetch the email\r",
							"    const rawBody = pm.request.body.raw;\r",
							"\r",
							"    //json to js\r",
							"    const requestBody = JSON.parse(rawBody);\r",
							"\r",
							"    const expectedEmail = requestBody.email;\r",
							"\r",
							"    console.log(\"expected email=========>\" + expectedEmail)\r",
							"    pm.expect(jsonData.email).to.eql(expectedEmail);       \r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"const userId = response.id\r",
							"pm.variables.set(\"userID\",userId)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "// name gender, status : fetching form csv file:TestData.csv\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}\r\n//csv file",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v2/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateUserById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Is user status updated\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v2/users/{{userID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		}
	]
}